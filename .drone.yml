---
kind: pipeline
name: build_go_1.12

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: gcs-helper-1.12

steps:
- name: mod-download
  image: golang:1.12
  commands:
  - go mod download
  environment:
    GOPROXY: https://proxy.golang.org
  depends_on:
  - clone

- name: test
  image: golang:1.12
  commands:
  - go test -race -vet all -mod readonly ./...
  depends_on:
  - mod-download

- name: lint
  pull: always
  image: golangci/golangci-lint
  commands:
  - golangci-lint run --enable-all -D errcheck -D lll -D dupl -D gochecknoglobals -D funlen -D wsl -D gomnd -D testpackage --deadline 5m ./...
  depends_on:
  - mod-download

- name: build
  image: golang:1.12
  commands:
  - go build -o gcs-helper -mod readonly -ldflags "-X main.version=$${DRONE_TAG:-SNAPSHOT-${DRONE_COMMIT}}"
  environment:
    CGO_ENABLED: 0
  depends_on:
  - mod-download

- name: sanity-check
  image: alpine
  commands:
  - ./gcs-helper -version
  depends_on:
  - build

- name: test-ci-dockerfile
  image: plugins/docker
  settings:
    dry_run: true
    repo: nytimes/gcs-helper
  when:
    event:
    - pull_request
  depends_on:
  - build

- name: build-and-push-to-dockerhub
  image: plugins/docker
  settings:
    auto_tag: true
    password:
      from_secret: docker_password
    repo: nytimes/gcs-helper
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/tags/*
    - refs/heads/master
  depends_on:
  - test
  - lint
  - build

- name: docker-sanity-check-push
  pull: always
  image: nytimes/gcs-helper:latest
  commands:
  - gcs-helper -version
  when:
    ref:
    - refs/heads/master
  depends_on:
  - build-and-push-to-dockerhub

- name: docker-sanity-check-tag
  pull: always
  image: "nytimes/gcs-helper:${DRONE_TAG#v}"
  commands:
  - gcs-helper -version
  when:
    ref:
    - refs/tags/*
  depends_on:
  - build-and-push-to-dockerhub

---
kind: pipeline
name: build_go_1.13

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: gcs-helper-1.13

steps:
- name: mod-download
  image: golang:1.13
  commands:
  - go mod download
  environment:
    GOPROXY: https://proxy.golang.org
  depends_on:
  - clone

- name: test
  image: golang:1.13
  commands:
  - go test -race -vet all -mod readonly ./...
  depends_on:
  - mod-download

- name: lint
  pull: always
  image: golangci/golangci-lint
  commands:
  - golangci-lint run --enable-all -D errcheck -D lll -D dupl -D gochecknoglobals -D funlen -D wsl -D gomnd -D testpackage --deadline 5m ./...
  depends_on:
  - mod-download

- name: build
  image: golang:1.13
  commands:
  - go build -o gcs-helper -mod readonly -ldflags "-X main.version=$${DRONE_TAG:-SNAPSHOT-${DRONE_COMMIT}}"
  environment:
    CGO_ENABLED: 0
  depends_on:
  - mod-download

- name: sanity-check
  image: alpine
  commands:
  - ./gcs-helper -version
  depends_on:
  - build

...
